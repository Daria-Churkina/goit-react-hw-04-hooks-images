{"version":3,"sources":["Components/api.jsx","Components/galleryItem.jsx","Components/gallery.jsx","Components/modal.jsx","Components/searchForm.jsx","Components/button.jsx","Components/imageInfo.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","apiKey","searchQuery","page","then","response","data","hits","GalleryItem","smallImage","largeImage","onClick","className","src","alt","Gallery","images","map","image","index","webformatURL","largeImageURL","Modal","onClose","useEffect","closeModal","e","code","window","addEventListener","removeEventListener","target","nodeName","SearchForm","onSubmit","useState","inputValue","setInputValue","preventDefault","trim","toast","warn","position","POSITION","TOP_LEFT","type","value","onChange","event","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","Button","ImageInfo","setSearchQuery","setPage","setError","results","setResults","loading","setLoading","setFirstFetch","modalImage","setModalImage","api","prevImages","catch","finally","scroll","scrollTo","bottom","document","documentElement","scrollHeight","behavior","query","imageUrl","color","height","width","length","prevPage","App","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cba231c6.chunk.js","sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://pixabay.com/api';\nconst apiKey = '19476609-7641264ac12d7db32f779afed';\n\nconst fetchImagesWithQuery = (searchQuery, page = 1) => {\n  return axios(\n    `/?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => response.data.hits);\n};\n\nexport default { fetchImagesWithQuery };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GalleryItem = ({ smallImage, largeImage, onClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        onClick={() => onClick(largeImage)}\n        src={smallImage}\n        alt=\"gallaryImg\"\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\n\nGalleryItem.propTypes = {\n  smallImage: PropTypes.string.isRequired,\n  largeImage: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default GalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GalleryItem from './galleryItem';\n\nconst Gallery = ({ images, onClick }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((image, index) => (\n        <GalleryItem\n          key={index}\n          smallImage={image.webformatURL}\n          largeImage={image.largeImageURL}\n          onClick={onClick}\n        />\n      ))}\n    </ul>\n  );\n};\n\nGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Gallery;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Modal({ onClose, largeImage }) {\n  useEffect(() => {\n    const closeModal = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', closeModal);\n    return () => {\n      window.removeEventListener('keydown', closeModal);\n    };\n  }, [onClose]);\n\n  const clickOverlay = e => {\n    if (e.target.nodeName !== 'IMG') {\n      onClose();\n    }\n  };\n\n  return (\n    <div onClick={clickOverlay} className=\"Overlay\">\n      <div className=\"Modal\">\n        <img src={largeImage} alt=\"modalImg\" className=\"modalImg\" />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  largeImage: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction SearchForm({ onSubmit }) {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = event =>\n    setInputValue(event.currentTarget.value.toLowerCase());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (inputValue.trim() === '') {\n      toast.warn('Enter what you want to find', {\n        position: toast.POSITION.TOP_LEFT,\n      });\n      return;\n    }\n\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          value={inputValue}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default SearchForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <div className=\" LoadMore\">\n      <button type=\"button\" onClick={onClick} className=\"Button\">\n        Load More\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport api from './api';\nimport Gallery from './gallery';\nimport Modal from './modal';\nimport SearchForm from './searchForm';\nimport Button from './button';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nfunction ImageInfo() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [firstFetch, setFirstFetch] = useState(true);\n  const [modalImage, setModalImage] = useState(null);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    setLoading(true);\n\n    api\n      .fetchImagesWithQuery(searchQuery, page)\n      .then(images => {\n        setResults(prevImages => [...prevImages, ...images]);\n      })\n      .catch(setError('Oops! Try again'))\n      .finally(() => {\n        setLoading(false);\n        setFirstFetch(false);\n      });\n  }, [searchQuery, page]);\n\n  const handleSearchSubmit = query => {\n    setSearchQuery(query);\n    setResults([]);\n    setPage(1);\n    setError(null);\n    setFirstFetch(true);\n  };\n\n  const openModal = imageUrl => {\n    setModalImage(imageUrl);\n  };\n\n  const closeModal = () => {\n    setModalImage(null);\n  };\n\n  const loadMore = () => {\n    setLoading(true);\n    setPage(prevPage => prevPage + 1);\n    scroll();\n  };\n  const scroll = () => {\n    if (!setFirstFetch) {\n      window.scrollTo({\n        bottom: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSearchSubmit} />\n      <Gallery images={results} onClick={openModal} />\n      {modalImage && <Modal largeImage={modalImage} onClose={closeModal} />}\n      <div className=\"Loader\">\n        {loading && (\n          <Loader type=\"Oval\" color=\"#00BFFF\" height={100} width={100} />\n        )}\n      </div>\n      {results.length > 0 && !loading && <Button onClick={loadMore} />}\n    </>\n  );\n}\n\nexport default ImageInfo;\n","import { useState } from 'react';\nimport './styles.css';\nimport ImageInfo from './Components/imageInfo';\nimport { ToastContainer } from 'react-toastify';\n\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  \n   return (\n      <div className=\"App\">\n        <ImageInfo searchQuery={setSearchQuery} />\n        <ToastContainer autoClose={4000} />\n      </div>\n    );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}